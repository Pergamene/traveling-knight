{"version":3,"sources":["components/Square.tsx","utils/utility-knight.ts","components/Board.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","boxSizing","height","width","display","alignItems","justifyContent","fontFamily","fontSize","black","backgroundColor","white","possible","border","x","color","k","show","Square","props","classes","useState","clickNumber","setClickNumber","row","column","possibles","changeLocation","moves","incrementMoves","map","pair","isPossible","className","onClick","_onBoard","possibleMove","maxWidth","maxHeight","margin","flexWrap","Board","setPossibles","setMoves","newLocation","location","move","one","two","i","push","findPossibleMoves","arr","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf04345e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: 'border-box',\n    height: '100px',\n    width: '100px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: '\"Rubik Mono One\", sans-serif',\n    fontSize: '80px',\n  },\n  black: {\n    backgroundColor: '#000',\n  },\n  white: {\n    backgroundColor: '#fff',\n  },\n  possible: {\n    border: '10px solid #76ff03',\n  },\n  x: {\n    color: '#f00',\n    display: 'none',\n  },\n  k: {\n    color: '#757575',\n    display: 'none',\n  },\n  show: {\n    display: 'block',\n  }\n});\n\ninterface SquareProps {\n  row: number;\n  column: number;\n  possibles: number[][];\n  changeLocation: CallableFunction;\n  moves: number;\n  incrementMoves: CallableFunction;\n}\n\nconst Square = (props: SquareProps) => {\n  const classes = useStyles();\n  const [clickNumber, setClickNumber] = useState(-2);\n  const {row, column, possibles, changeLocation, moves, incrementMoves} = props;\n  \n  const handleClick = (): void => {\n    if (possible) {\n      setClickNumber(moves);\n      incrementMoves();\n      changeLocation({row: row, column: column});\n    }\n  }\n  \n  const isWhite = (): boolean => {\n    return ((row % 2 === 0) && (column % 2 === 0)) || ((row % 2 === 1) && (column % 2 === 1));\n  }\n  \n  const isPossible = (): boolean => {\n    if (moves === 0) {\n      return true;\n    }\n    if (clickNumber >= 0) {\n      return false;\n    }\n    let possible: boolean = false;\n    possibles.map((pair: number[]) => {\n      return possible = possible || (pair[0] === row && pair[1] === column);\n    });\n    return possible;\n  }\n  \n  const possible = isPossible();\n  \n  return (\n    <div \n    className={`\n      ${classes.root} ${isWhite() ? classes.white : classes.black} \n      ${possible ? classes.possible : ''}\n    `}\n    onClick={handleClick}>\n      <p className={`\n        ${classes.k} \n        ${(clickNumber === moves-1) ? classes.show : ''}\n      `}>K</p>\n      <p className={`\n        ${classes.x} \n        ${(clickNumber >= 0 && clickNumber < moves-1) ? classes.show : ''}\n      `}>X</p>\n    </div>\n  );\n}\n\nexport default Square;\n","import { Location } from '../entities/Location';\n\nexport function findPossibleMoves(location: Location): number[][] {\n  const {row, column} = location;\n  let move: number[];\n  const moves: number[][] = [];\n\n  let one = 1; \n  let two = 2;\n  for (let i = 1; i <= 4; i++) {\n    one *= -1;\n    if (i > 2) {\n      two = -2;\n    }\n    move = [row + one, column + two];\n    if (_onBoard(move)) {\n      moves.push(move);\n    }\n    move = [row + two, column + one];\n    if (_onBoard(move)) {\n      moves.push(move);\n    }\n  }\n\n  return moves;\n}\n\nfunction _onBoard(possibleMove: number[]): boolean {\n  const [row, column] = possibleMove;\n  if((row >= 0 && row <= 7) && (column >= 0 && column <= 7)) {\n    return true;\n  }\n  return false;\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Square from './Square';\nimport { Location } from '../entities/Location';\nimport { findPossibleMoves } from '../utils/utility-knight';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '800px',\n    maxHeight: '800px',\n    height: '100%',\n    width: '100%',\n    margin: '50px auto 0',\n    display: 'flex',\n    flexWrap: 'wrap',\n    border: '3px solid #000',\n  },\n});\n\nconst Board = () => {\n  const emptyPossibles: number[][] = [];\n  const classes = useStyles();\n  const [possibles, setPossibles] = useState(emptyPossibles);\n  const [moves, setMoves] = useState(0);\n\n  const incrementMoves = () => {\n    setMoves(moves + 1);\n  }\n\n  const changeLocation = (newLocation: Location) => {\n    setPossibles(findPossibleMoves(newLocation));\n  }\n\n  const arr: number[] = [0, 1, 2, 3, 4, 5, 6, 7];\n\n  return (\n    <div className={classes.root}>\n      {arr.map((row: number) => {\n        return arr.map((column: number) => {\n          return <Square \n            row={row} \n            column={column} \n            possibles={possibles} \n            changeLocation={changeLocation} \n            moves={moves}\n            incrementMoves={incrementMoves}\n            key={`${row}${column}`} \n          />;\n        })\n      })}\n    </div>\n  );\n}\n\nexport default Board;\n","import React from 'react';\n\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}